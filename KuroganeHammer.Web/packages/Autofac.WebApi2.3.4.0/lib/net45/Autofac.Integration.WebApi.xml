<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Autofac.Integration.WebApi</name>
    </assembly>
    <members>
        <member name="T:Autofac.Integration.WebApi.ActionFilterWrapper">
            <summary>
            Resolves a filter for the specified metadata for each controller request.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.IAutofacActionFilter">
            <summary>
            An action filter that will be created for each controller request.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.IAutofacActionFilter.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Occurs before the action method is invoked.
            </summary>
            <param name="actionContext">The context for the action.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.IAutofacActionFilter.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            Occurs after the action method is invoked.
            </summary>
            <param name="actionExecutedContext">The context for the action.</param>
        </member>
        <member name="T:Autofac.Integration.WebApi.IFilterWrapper">
            <summary>
            Common behaviour required for filter wrappers.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.IFilterWrapper.MetadataKey">
            <summary>
            Gets the metadata key used to retrieve the filter metadata.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.ActionFilterWrapper.#ctor(Autofac.Integration.WebApi.FilterMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.ActionFilterWrapper"/> class.
            </summary>
            <param name="filterMetadata">The filter metadata.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.ActionFilterWrapper.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Occurs before the action method is invoked.
            </summary>
            <param name="actionContext">The context for the action.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="actionContext"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Autofac.Integration.WebApi.ActionFilterWrapper.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            Occurs after the action method is invoked.
            </summary>
            <param name="actionExecutedContext">The context for the action.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="actionExecutedContext"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:Autofac.Integration.WebApi.ActionFilterWrapper.MetadataKey">
            <summary>
            Gets the metadata key used to retrieve the filter metadata.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.AuthorizationFilterWrapper">
            <summary>
            Resolves a filter for the specified metadata for each controller request.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.IAutofacAuthorizationFilter">
            <summary>
            An authorization filter that will be created for each controller request.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.IAutofacAuthorizationFilter.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Called when a process requests authorization.
            </summary>
            <param name="actionContext">The context for the action.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.AuthorizationFilterWrapper.#ctor(Autofac.Integration.WebApi.FilterMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.AuthorizationFilterWrapper"/> class.
            </summary>
            <param name="filterMetadata">The filter metadata.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.AuthorizationFilterWrapper.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Called when a process requests authorization.
            </summary>
            <param name="actionContext">The context for the action.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="actionContext"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:Autofac.Integration.WebApi.AuthorizationFilterWrapper.MetadataKey">
            <summary>
            Gets the metadata key used to retrieve the filter metadata.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.ActionFilterOverrideWrapper">
            <summary>
            Resolves a filter override for the specified metadata for each controller request.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.ActionFilterOverrideWrapper.#ctor(Autofac.Integration.WebApi.FilterMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.ActionFilterOverrideWrapper"/> class.
            </summary>
            <param name="filterMetadata">The filter metadata.</param>
        </member>
        <member name="P:Autofac.Integration.WebApi.ActionFilterOverrideWrapper.MetadataKey">
            <summary>
            Gets the metadata key used to retrieve the filter metadata.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.ActionFilterOverrideWrapper.FiltersToOverride">
            <summary>
            Gets the filters to override.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.AutofacOverrideFilter">
            <summary>
            Allows other filters to be overriden at the control and action level.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.AutofacWebApiDependencyResolver">
            <summary>
            Autofac implementation of the <see cref="T:System.Web.Http.Dependencies.IDependencyResolver"/> interface.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiDependencyResolver.#ctor(Autofac.ILifetimeScope)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.AutofacWebApiDependencyResolver"/> class.
            </summary>
            <param name="container">The container that nested lifetime scopes will be create from.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiDependencyResolver.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Autofac.Integration.WebApi.AutofacWebApiDependencyResolver"/> class.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiDependencyResolver.GetService(System.Type)">
            <summary>
            Try to get a service of the given type.
            </summary>
            <param name="serviceType">Type of service to request.</param>
            <returns>An instance of the service, or null if the service is not found.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiDependencyResolver.GetServices(System.Type)">
            <summary>
            Try to get a list of services of the given type.
            </summary>
            <param name="serviceType">ControllerType of services to request.</param>
            <returns>An enumeration (possibly empty) of the service.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiDependencyResolver.BeginScope">
            <summary>
            Starts a resolution scope. Objects which are resolved in the given scope will belong to
            that scope, and when the scope is disposed, those objects are returned to the container.
            </summary>
            <returns>
            The dependency scope.
            </returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiDependencyResolver.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.AutofacWebApiDependencyResolver.Container">
            <summary>
            Gets the root container provided to the dependency resolver.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.AutofacWebApiDependencyScope">
            <summary>
            Autofac implementation of the <see cref="T:System.Web.Http.Dependencies.IDependencyScope"/> interface.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiDependencyScope.#ctor(Autofac.ILifetimeScope)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.AutofacWebApiDependencyScope"/> class.
            </summary>
            <param name="lifetimeScope">The lifetime scope to resolve services from.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiDependencyScope.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Autofac.Integration.WebApi.AutofacWebApiDependencyScope"/> class.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiDependencyScope.GetService(System.Type)">
            <summary>
            Try to get a service of the given type.
            </summary>
            <param name="serviceType">ControllerType of service to request.</param>
            <returns>An instance of the service, or null if the service is not found.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiDependencyScope.GetServices(System.Type)">
            <summary>
            Try to get a list of services of the given type.
            </summary>
            <param name="serviceType">ControllerType of services to request.</param>
            <returns>An enumeration (possibly empty) of the service.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiDependencyScope.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.AutofacWebApiDependencyScope.LifetimeScope">
            <summary>
            Gets the lifetime scope for the current dependency scope.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.AutofacWebApiFilterProvider">
            <summary>
            A filter provider for performing property injection on filter attributes.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiFilterProvider.#ctor(Autofac.ILifetimeScope)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.AutofacWebApiFilterProvider"/> class.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            Returns the collection of filters associated with <paramref name="actionDescriptor"/>.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="actionDescriptor">The action descriptor.</param>
            <returns>A collection of filters with instances property injected.</returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="configuration"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:Autofac.Integration.WebApi.AutofacWebApiModelBinderProvider">
            <summary>
            Autofac implementation of the <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider"/> class.
            </summary>
        </member>
        <member name="F:Autofac.Integration.WebApi.AutofacWebApiModelBinderProvider.MetadataKey">
            <summary>
            Metadata key for the supported model types.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacWebApiModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
            <summary>
            Find a binder for the given type.
            </summary>
            <param name="configuration">A configuration object.</param>
            <param name="modelType">The type of the model to bind against.</param>
            <returns>A binder, which can attempt to bind this type. Or null if the binder knows statically that it will never be able to bind the type.</returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="configuration"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:Autofac.Integration.WebApi.ControllerTypeKey">
            <summary>
            A service key used to register services per controller type.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.ControllerTypeKey.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.ControllerTypeKey"/> class.
            </summary>
            <param name="controllerType">Type of the controller.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.ControllerTypeKey.Equals(Autofac.Integration.WebApi.ControllerTypeKey)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="other"></param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.ControllerTypeKey.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:Autofac.Integration.WebApi.ControllerTypeKey.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Autofac.Integration.WebApi.ControllerTypeKey.ControllerType">
            <summary>
            Gets the type of the controller.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.AuthenticationFilterWrapper">
            <summary>
            Resolves a filter for the specified metadata for each controller request.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.IAutofacAuthenticationFilter">
            <summary>
            An authentication filter that will be created for each controller request.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.IAutofacAuthenticationFilter.OnAuthenticate(System.Web.Http.Filters.HttpAuthenticationContext)">
            <summary>
            Called when a request requires authentication.
            </summary>
            <param name="context">The context for the authentication.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.IAutofacAuthenticationFilter.OnChallenge(System.Web.Http.Filters.HttpAuthenticationChallengeContext)">
            <summary>
            Called when an authentication challenge is required.
            </summary>
            <param name="context">The context for the authentication challenge.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.AuthenticationFilterWrapper.#ctor(Autofac.Integration.WebApi.FilterMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.AuthenticationFilterWrapper"/> class.
            </summary>
            <param name="filterMetadata">The filter metadata.</param>
        </member>
        <member name="P:Autofac.Integration.WebApi.AuthenticationFilterWrapper.MetadataKey">
            <summary>
            Gets the metadata key used to retrieve the filter metadata.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.AuthenticationFilterOverrideWrapper">
            <summary>
            Resolves a filter override for the specified metadata for each controller request.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.AuthenticationFilterOverrideWrapper.#ctor(Autofac.Integration.WebApi.FilterMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.AuthenticationFilterOverrideWrapper"/> class.
            </summary>
            <param name="filterMetadata">The filter metadata.</param>
        </member>
        <member name="P:Autofac.Integration.WebApi.AuthenticationFilterOverrideWrapper.MetadataKey">
            <summary>
            Gets the metadata key used to retrieve the filter metadata.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.AuthenticationFilterOverrideWrapper.FiltersToOverride">
            <summary>
            Gets the filters to override.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.AuthorizationFilterOverrideWrapper">
            <summary>
            Resolves a filter override for the specified metadata for each controller request.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.AuthorizationFilterOverrideWrapper.#ctor(Autofac.Integration.WebApi.FilterMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.AuthorizationFilterOverrideWrapper"/> class.
            </summary>
            <param name="filterMetadata">The filter metadata.</param>
        </member>
        <member name="P:Autofac.Integration.WebApi.AuthorizationFilterOverrideWrapper.MetadataKey">
            <summary>
            Gets the metadata key used to retrieve the filter metadata.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.AuthorizationFilterOverrideWrapper.FiltersToOverride">
            <summary>
            Gets the filters to override.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.ExceptionFilterOverrideWrapper">
            <summary>
            Resolves a filter override for the specified metadata for each controller request.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.ExceptionFilterWrapper">
            <summary>
            Resolves a filter for the specified metadata for each controller request.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.IAutofacExceptionFilter">
            <summary>
            An exception filter that will be created for each controller request.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.IAutofacExceptionFilter.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            Called when an exception is thrown.
            </summary>
            <param name="actionExecutedContext">The context for the action.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.ExceptionFilterWrapper.#ctor(Autofac.Integration.WebApi.FilterMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.ExceptionFilterWrapper"/> class.
            </summary>
            <param name="filterMetadata">The filter metadata.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.ExceptionFilterWrapper.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            Called when an exception is thrown.
            </summary>
            <param name="actionExecutedContext">The context for the action.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="actionExecutedContext"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:Autofac.Integration.WebApi.ExceptionFilterWrapper.MetadataKey">
            <summary>
            Gets the metadata key used to retrieve the filter metadata.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.ExceptionFilterOverrideWrapper.#ctor(Autofac.Integration.WebApi.FilterMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Autofac.Integration.WebApi.ExceptionFilterOverrideWrapper"/> class.
            </summary>
            <param name="filterMetadata">The filter metadata.</param>
        </member>
        <member name="P:Autofac.Integration.WebApi.ExceptionFilterOverrideWrapper.MetadataKey">
            <summary>
            Gets the metadata key used to retrieve the filter metadata.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.ExceptionFilterOverrideWrapper.FiltersToOverride">
            <summary>
            Gets the filters to override.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.CurrentRequestHandler">
            <summary>
                A delegating handler that updates the current dependency scope
                with the current <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.CurrentRequestHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.
            </summary>
            <param name="request">The HTTP request message to send to the server.</param>
            <param name="cancellationToken">A cancellation token to cancel operation.</param>
            <returns>
            Returns <see cref="T:System.Threading.Tasks.Task`1" />. The task object representing the asynchronous operation.
            </returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.CurrentRequestHandler.UpdateScopeWithHttpRequestMessage(System.Net.Http.HttpRequestMessage)">
            <summary>
            Updates the current dependency scope with current HTTP request message.
            </summary>
            <param name="request">The HTTP request message.</param>
        </member>
        <member name="T:Autofac.Integration.WebApi.DependencyResolverExtensions">
            <summary>
            Extension methods to the <see cref="T:System.Web.Http.Dependencies.IDependencyResolver"/> interface.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.DependencyResolverExtensions.GetRootLifetimeScope(System.Web.Http.Dependencies.IDependencyResolver)">
            <summary>
            Gets the root lifetime scope from the Autofac dependency resolver.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.DependencyResolverExtensions.GetRequestLifetimeScope(System.Web.Http.Dependencies.IDependencyScope)">
            <summary>
            Gets the request lifetime scope from the Autofac dependency scope.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.FilterMetadata">
            <summary>
            Metadata interface for filter registrations.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.FilterMetadata.ControllerType">
            <summary>
            Gets the type of the controller.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.FilterMetadata.FilterScope">
            <summary>
            Gets the filter scope.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.FilterMetadata.MethodInfo">
            <summary>
            Gets the method info.
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.AutofacControllerConfigurationAttribute">
            <summary>
            Configures the controller descriptor with per-controller services from the container.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.AutofacControllerConfigurationAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
            <summary>
            Callback invoked to set per-controller overrides for this controllerDescriptor.
            </summary>
            <param name="controllerSettings">The controller settings to initialize.</param>
            <param name="controllerDescriptor">The controller descriptor. Note that the 
            <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor"/> can be 
            associated with the derived controller type given that <see cref="T:System.Web.Http.Controllers.IControllerConfiguration"/> 
            is inherited.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="controllerSettings"/> or <paramref name="controllerDescriptor"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:Autofac.Integration.WebApi.AutofacControllerConfigurationAttributeResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.AutofacControllerConfigurationAttributeResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.AutofacControllerConfigurationAttributeResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.AutofacControllerConfigurationAttributeResources.DependencyResolverMissing">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; must be configured as the dependency resolver for Web API before the &apos;{1}&apos; can resolve services from the container for a controller type..
            </summary>
        </member>
        <member name="T:Autofac.Integration.WebApi.RegistrationExtensions">
            <summary>
            Adds registration syntax to the <see cref="T:Autofac.ContainerBuilder"/> type.
            </summary>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.RegisterApiControllers(Autofac.ContainerBuilder,System.Reflection.Assembly[])">
            <summary>
            Register types that implement <see cref="T:System.Web.Http.Controllers.IHttpController"/> in the provided assemblies.
            </summary>
            <param name="builder">The container builder.</param>
            <param name="controllerAssemblies">Assemblies to scan for controllers.</param>
            <returns>Registration builder allowing the controller components to be customised.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.InstancePerApiRequest``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2},System.Object[])">
            <summary>
            Share one instance of the component within the context of a 
            single <see cref="T:System.Web.Http.ApiController"/> request.
            </summary>
            <typeparam name="TLimit">Registration limit type.</typeparam>
            <typeparam name="TStyle">Registration style.</typeparam>
            <typeparam name="TActivatorData">Activator data type.</typeparam>
            <param name="registration">The registration to configure.</param>
            <param name="lifetimeScopeTags">Additional tags applied for matching lifetime scopes.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="registration"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.InstancePerApiControllerType``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2},System.Type)">
            <summary>
            Share one instance of the component within the context of a controller type.
            </summary>
            <typeparam name="TLimit">Registration limit type.</typeparam>
            <typeparam name="TStyle">Registration style.</typeparam>
            <typeparam name="TActivatorData">Activator data type.</typeparam>
            <param name="registration">The registration to configure.</param>
            <param name="controllerType">The controller type.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.InstancePerApiControllerType``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2},System.Type,System.Boolean)">
            <summary>
            Share one instance of the component within the context of a controller type.
            </summary>
            <typeparam name="TLimit">Registration limit type.</typeparam>
            <typeparam name="TStyle">Registration style.</typeparam>
            <typeparam name="TActivatorData">Activator data type.</typeparam>
            <param name="registration">The registration to configure.</param>
            <param name="controllerType">The controller type.</param>
            <param name="clearExistingServices">Clear the existing list of controller level services before adding.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.RegisterHttpRequestMessage(Autofac.ContainerBuilder,System.Web.Http.HttpConfiguration)">
            <summary>
            Makes the current <see cref="T:System.Net.Http.HttpRequestMessage"/> resolvable through the dependency scope.
            </summary>
            <param name="builder">The container builder.</param>
            <param name="config">The HTTP server configuration.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.RegisterWebApiModelBinderProvider(Autofac.ContainerBuilder)">
            <summary>
            Registers the <see cref="T:Autofac.Integration.WebApi.AutofacWebApiModelBinderProvider"/>.
            </summary>
            <param name="builder">The container builder.</param>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.RegisterWebApiModelBinders(Autofac.ContainerBuilder,System.Reflection.Assembly[])">
            <summary>
            Register types that implement <see cref="T:System.Web.Http.ModelBinding.IModelBinder"/> in the provided assemblies.
            </summary>
            <param name="builder">The container builder.</param>
            <param name="modelBinderAssemblies">Assemblies to scan for model binders.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="builder"/> or <paramref name="modelBinderAssemblies"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsModelBinderForTypes``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2},System.Type[])">
            <summary>
            Sets a provided registration to act as an <see cref="T:System.Web.Http.ModelBinding.IModelBinder"/> for the specified list of types.
            </summary>
            <param name="registration">The registration for the type or object instance that will act as the model binder.</param>
            <param name="types">The list of model <see cref="T:System.Type"/> for which the <paramref name="registration"/> should be a model binder.</param>
            <typeparam name="TLimit">Registration limit type.</typeparam>
            <typeparam name="TActivatorData">Activator data type.</typeparam>
            <typeparam name="TRegistrationStyle">Registration style.</typeparam>
            <returns>An Autofac registration that can be modified as needed.</returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="registration"/> or <paramref name="types"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown if <paramref name="types"/> is empty or contains all <see langword="null"/> values.
            </exception>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.RegisterWebApiFilterProvider(Autofac.ContainerBuilder,System.Web.Http.HttpConfiguration)">
            <summary>
            Registers the <see cref="T:Autofac.Integration.WebApi.AutofacWebApiFilterProvider"/>.
            </summary>
            <param name="configuration">Configuration of HttpServer instances.</param>
            <param name="builder">The container builder.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="builder"/> or <paramref name="configuration"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiActionFilterFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle},System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacActionFilter"/> for the specified controller action.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiActionFilterFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacActionFilter"/> for the specified controller.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiActionFilterOverrideFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle},System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacActionFilter"/> override for the specified controller action.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiActionFilterOverrideFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacActionFilter"/> override for the specified controller.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiAuthorizationFilterFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle},System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacAuthorizationFilter"/> for the specified controller action.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiAuthorizationFilterFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacAuthorizationFilter"/> for the specified controller.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiAuthorizationFilterOverrideFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle},System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacAuthorizationFilter"/> override for the specified controller action.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiAuthorizationFilterOverrideFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacAuthorizationFilter"/> override for the specified controller.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiExceptionFilterFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle},System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacExceptionFilter"/> for the specified controller action.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiExceptionFilterFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacExceptionFilter"/> for the specified controller.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiExceptionFilterOverrideFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle},System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacExceptionFilter"/> override for the specified controller action.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiExceptionFilterOverrideFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacExceptionFilter"/> override for the specified controller.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiAuthenticationFilterFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle},System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacAuthenticationFilter"/> for the specified controller action.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiAuthenticationFilterFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacAuthenticationFilter"/> for the specified controller.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiAuthenticationFilterOverrideFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle},System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacAuthenticationFilter"/> override for the specified controller action.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.AsWebApiAuthenticationFilterOverrideFor``1(Autofac.Builder.IRegistrationBuilder{System.Object,Autofac.Builder.IConcreteActivatorData,Autofac.Builder.SingleRegistrationStyle})">
            <summary>
            Sets the provided registration to act as an <see cref="T:Autofac.Integration.WebApi.IAutofacAuthenticationFilter"/> override for the specified controller.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="registration">The registration.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.OverrideWebApiActionFilterFor``1(Autofac.ContainerBuilder,System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:System.Web.Http.Filters.IOverrideFilter"/> for the specified controller action.
            </summary>
            <param name="builder">The container builder.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.OverrideWebApiActionFilterFor``1(Autofac.ContainerBuilder)">
            <summary>
            Sets the provided registration to act as an <see cref="T:System.Web.Http.Filters.IOverrideFilter"/> for the specified controller.
            </summary>
            <param name="builder">The container builder.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.OverrideWebApiAuthorizationFilterFor``1(Autofac.ContainerBuilder,System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:System.Web.Http.Filters.IOverrideFilter"/> for the specified controller action.
            </summary>
            <param name="builder">The container builder.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.OverrideWebApiAuthorizationFilterFor``1(Autofac.ContainerBuilder)">
            <summary>
            Sets the provided registration to act as an <see cref="T:System.Web.Http.Filters.IOverrideFilter"/> for the specified controller.
            </summary>
            <param name="builder">The container builder.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.OverrideWebApiExceptionFilterFor``1(Autofac.ContainerBuilder,System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:System.Web.Http.Filters.IOverrideFilter"/> for the specified controller action.
            </summary>
            <param name="builder">The container builder.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.OverrideWebApiExceptionFilterFor``1(Autofac.ContainerBuilder)">
            <summary>
            Sets the provided registration to act as an <see cref="T:System.Web.Http.Filters.IOverrideFilter"/> for the specified controller.
            </summary>
            <param name="builder">The container builder.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.OverrideWebApiAuthenticationFilterFor``1(Autofac.ContainerBuilder,System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Sets the provided registration to act as an <see cref="T:System.Web.Http.Filters.IOverrideFilter"/> for the specified controller action.
            </summary>
            <param name="builder">The container builder.</param>
            <param name="actionSelector">The action selector.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Integration.WebApi.RegistrationExtensions.OverrideWebApiAuthenticationFilterFor``1(Autofac.ContainerBuilder)">
            <summary>
            Sets the provided registration to act as an <see cref="T:System.Web.Http.Filters.IOverrideFilter"/> for the specified controller.
            </summary>
            <param name="builder">The container builder.</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="T:Autofac.Integration.WebApi.RegistrationExtensionsResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.RegistrationExtensionsResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.RegistrationExtensionsResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.RegistrationExtensionsResources.InvalidActionExpress">
            <summary>
              Looks up a localized string similar to The action method Expression is invalid. It should consist only of a Method call to a controller action method..
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.RegistrationExtensionsResources.ListMustNotBeEmptyOrContainNulls">
            <summary>
              Looks up a localized string similar to Type list may not be empty or contain all null values..
            </summary>
        </member>
        <member name="P:Autofac.Integration.WebApi.RegistrationExtensionsResources.MustBeAssignableToFilterType">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; must be assignable to &apos;{1}&apos;..
            </summary>
        </member>
    </members>
</doc>
