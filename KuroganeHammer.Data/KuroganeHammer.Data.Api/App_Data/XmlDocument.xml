<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KuroganeHammer.Data.Api</name>
    </assembly>
    <members>
        <member name="M:KuroganeHammer.Data.Api.Controllers.AccountController.GetUsers">
            <summary>
            Get all users.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.AccountController.GetUser(System.String)">
            <summary>
            Get a specific user.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.AccountController.ChangePassword(KuroganeHammer.Data.Core.Models.ChangePasswordBindingModel)">
            <summary>
            Change a user's password.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.AccountController.RemoveLogin(KuroganeHammer.Data.Core.Models.RemoveLoginBindingModel)">
            <summary>
            Remove the ability for a user to login.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.AccountController.Register(KuroganeHammer.Data.Core.Models.RegisterBindingModel)">
            <summary>
            Register a brand new user.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:KuroganeHammer.Data.Api.Controllers.CalculatorController">
            <summary>
            Controller used for calculating data off of character attributes and properties such as moves.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CalculatorController.#ctor">
            <summary>
            Creates a <see cref="T:KuroganeHammer.Data.Api.Controllers.CalculatorController"/> with the default <see cref="T:KuroganeHammer.Data.Api.Models.ApplicationDbContext"/>.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CalculatorController.#ctor(KuroganeHammer.Data.Api.Models.ApplicationDbContext)">
            <summary>
            Creates a <see cref="T:KuroganeHammer.Data.Api.Controllers.CalculatorController"/> with the specified <see cref="T:KuroganeHammer.Data.Api.Models.ApplicationDbContext"/>.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CalculatorController.PostRage(KuroganeHammer.Data.Core.Calculations.RageProblemData)">
            <summary>
            Calculate Rage based on passed in data.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CalculatorController.PostMoveVsKnockback(KuroganeHammer.Data.Core.Models.CalculatorMoveModel)">
            <summary>
            Calculate Vs mode knockback of a specific character's move.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CalculatorController.PostMoveShieldStunNormal(KuroganeHammer.Data.Core.Models.CalculatorMoveModel)">
            <summary>
            Calculate the Normal Shield stun of a specific character's move.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:KuroganeHammer.Data.Api.Controllers.CharacterAttributesController">
            <summary>
            Handles all individual <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/> operations.  
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributesController.#ctor">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/> controller to interact with the server.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributesController.#ctor(KuroganeHammer.Data.Api.Models.ApplicationDbContext)">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/> controller to interact with the server using a specific 
            <see cref="T:KuroganeHammer.Data.Api.Models.ApplicationDbContext"/>.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributesController.GetCharacterAttributes">
            <summary>
            Get all <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/>s.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributesController.GetCharacterAttribute(System.Int32)">
            <summary>
            Get a specific <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/> by its id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributesController.PutCharacterAttribute(System.Int32,KuroganeHammer.Data.Core.Models.CharacterAttribute)">
            <summary>
            Update a <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/>
            </summary>
            <param name="id"></param>
            <param name="characterAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributesController.PostCharacterAttribute(KuroganeHammer.Data.Core.Models.CharacterAttribute)">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/>.
            </summary>
            <param name="characterAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributesController.DeleteCharacterAttribute(System.Int32)">
            <summary>
            Delete a <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/>.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:KuroganeHammer.Data.Api.Controllers.CharacterAttributeTypesController">
            <summary>
            Handles the backing types of <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/>s.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributeTypesController.#ctor">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Api.Controllers.CharacterAttributeTypesController"/>.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributeTypesController.#ctor(KuroganeHammer.Data.Api.Models.ApplicationDbContext)">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Api.Controllers.CharacterAttributeTypesController"/> using
            a specific <see cref="T:KuroganeHammer.Data.Api.Models.ApplicationDbContext"/>.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributeTypesController.GetCharacterAttributeTypes">
            <summary>
            Get all of the <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttributeType"/> details.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributeTypesController.GetCharacterAttributeType(System.Int32)">
            <summary>
            Get a specific <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttributeType"/>s details.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributeTypesController.PutCharacterAttributeType(System.Int32,KuroganeHammer.Data.Core.Models.CharacterAttributeType)">
            <summary>
            Update a <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttributeType"/>.
            </summary>
            <param name="id"></param>
            <param name="characterAttributeType"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributeTypesController.PostCharacterAttributeType(KuroganeHammer.Data.Core.Models.CharacterAttributeType)">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttributeType"/>.
            </summary>
            <param name="characterAttributeType"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharacterAttributeTypesController.DeleteCharacterAttributeType(System.Int32)">
            <summary>
            Delete a <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttributeType"/>.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:KuroganeHammer.Data.Api.Controllers.CharactersController">
            <summary>
            Handles server operations dealing with <see cref="T:KuroganeHammer.Data.Core.Models.Character"/>s.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharactersController.#ctor">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Api.Controllers.CharactersController"/> to interact with the server.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharactersController.#ctor(KuroganeHammer.Data.Api.Models.ApplicationDbContext)">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Api.Controllers.CharactersController"/> to interact with the server using 
            a specific <see cref="T:KuroganeHammer.Data.Api.Models.ApplicationDbContext"/>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharactersController.GetCharacters">
            <summary>
            Get all of the <see cref="T:KuroganeHammer.Data.Core.Models.Character"/> details.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharactersController.GetCharacter(System.Int32)">
            <summary>
            Get a specific <see cref="T:KuroganeHammer.Data.Core.Models.Character"/>s details.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharactersController.GetMovementsForCharacter(System.Int32)">
            <summary>
            Get all the <see cref="T:KuroganeHammer.Data.Core.Models.Movement"/> data for a specific <see cref="T:KuroganeHammer.Data.Core.Models.Character"/>
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharactersController.GetMovesForCharacter(System.Int32)">
            <summary>
            Get all the <see cref="T:KuroganeHammer.Data.Core.Models.Move"/> data for a specific <see cref="T:KuroganeHammer.Data.Core.Models.Character"/>.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharactersController.PutCharacter(System.Int32,KuroganeHammer.Data.Core.Models.Character)">
            <summary>
            Update a <see cref="T:KuroganeHammer.Data.Core.Models.Character"/>.
            </summary>
            <param name="id"></param>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharactersController.PostCharacter(KuroganeHammer.Data.Core.Models.Character)">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Core.Models.Character"/>.
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.CharactersController.DeleteCharacter(System.Int32)">
            <summary>
            Delete a <see cref="T:KuroganeHammer.Data.Core.Models.Character"/>.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovementsController.GetMovements">
            <summary>
            Get all movement data.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovementsController.GetMovementsByName(System.String)">
            <summary>
            Get all of the <see cref="T:KuroganeHammer.Data.Api.DTOs.MovementDto"/> data that is a specific name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovementsController.GetMovement(System.Int32)">
            <summary>
            Get a specific <see cref="T:KuroganeHammer.Data.Api.DTOs.MovementDto"/>.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovementsController.PutMovement(System.Int32,KuroganeHammer.Data.Core.Models.Movement)">
            <summary>
            Update a specific <see cref="T:KuroganeHammer.Data.Core.Models.Movement"/>.
            </summary>
            <param name="id"></param>
            <param name="movement"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovementsController.PostMovement(KuroganeHammer.Data.Core.Models.Movement)">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Core.Models.Movement"/>.
            </summary>
            <param name="movement"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovementsController.DeleteMovement(System.Int32)">
            <summary>
            Delete a <see cref="T:KuroganeHammer.Data.Core.Models.Movement"/>.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovesController.GetMoves">
            <summary>
            Get all moves.  Not sure if this is sticking around.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovesController.GetMovesByName(System.String)">
            <summary>
            Get all moves that have a specific name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovesController.GetMove(System.Int32)">
            <summary>
            Get a specific <see cref="T:KuroganeHammer.Data.Api.DTOs.MoveDto"/>.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovesController.PutMove(System.Int32,KuroganeHammer.Data.Core.Models.Move)">
            <summary>
            Update a <see cref="T:KuroganeHammer.Data.Core.Models.Move"/>.
            </summary>
            <param name="id"></param>
            <param name="move"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovesController.PostMove(KuroganeHammer.Data.Core.Models.Move)">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Core.Models.Move"/>.
            </summary>
            <param name="move"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.MovesController.DeleteMove(System.Int32)">
            <summary>
            Delete a <see cref="T:KuroganeHammer.Data.Core.Models.Move"/>.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:KuroganeHammer.Data.Api.Controllers.NotationsController">
            <summary>
            Handles operations dealing with <see cref="T:KuroganeHammer.Data.Core.Models.Notation"/>s.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.NotationsController.#ctor">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Api.Controllers.NotationsController"/> to interact with the server.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.NotationsController.#ctor(KuroganeHammer.Data.Api.Models.ApplicationDbContext)">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Api.Controllers.NotationsController"/> to interact with the server using 
            a specific <see cref="T:KuroganeHammer.Data.Api.Models.ApplicationDbContext"/>
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.NotationsController.GetNotations">
            <summary>
            Get all <see cref="T:KuroganeHammer.Data.Core.Models.Notation"/>s.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.NotationsController.GetNotation(System.Int32)">
            <summary>
            Get a specific <see cref="T:KuroganeHammer.Data.Core.Models.Notation"/>s details.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.NotationsController.PutNotation(System.Int32,KuroganeHammer.Data.Core.Models.Notation)">
            <summary>
            Update a <see cref="T:KuroganeHammer.Data.Core.Models.Notation"/>.
            </summary>
            <param name="id"></param>
            <param name="notation"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.NotationsController.PostNotation(KuroganeHammer.Data.Core.Models.Notation)">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Core.Models.Notation"/>.
            </summary>
            <param name="notation"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.NotationsController.DeleteNotation(System.Int32)">
            <summary>
            Delete a <see cref="T:KuroganeHammer.Data.Core.Models.Notation"/>.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.RolesController.AddUserToRole(KuroganeHammer.Data.Core.Models.UserToRoleModel)">
            <summary>
            Add a user to a role via <see cref="T:KuroganeHammer.Data.Core.Models.UserToRoleModel"/>.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.RolesController.RemoveUserFromRole(KuroganeHammer.Data.Core.Models.UserToRoleModel)">
            <summary>
            Removes a user from the role specified in the passed in <see cref="T:KuroganeHammer.Data.Core.Models.UserToRoleModel"/>.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:KuroganeHammer.Data.Api.Controllers.SmashAttributeTypesController">
            <summary>
            Handles the more broad types that can be assigned to other metadata in the DB.
            </summary>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.SmashAttributeTypesController.GetSmashAttributeTypes">
            <summary>
            Get all of the stored <see cref="T:KuroganeHammer.Data.Core.Models.SmashAttributeType"/>s.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.SmashAttributeTypesController.GetSmashAttributeType(System.Int32)">
            <summary>
            Get a specific <see cref="T:KuroganeHammer.Data.Core.Models.SmashAttributeType"/>.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.SmashAttributeTypesController.GetAllCharacterAttributeOfSmashAttributeType(System.Int32)">
            <summary>
            Get back all of the <see cref="T:KuroganeHammer.Data.Core.Models.SmashAttributeType"/>s of a specific id
            as <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/> objects.  This call parses the returned 
            <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/>s into <see cref="T:KuroganeHammer.Data.Api.DTOs.CharacterAttributeRowDto"/>, 
            similar to how they are displayed on KuroganeHammer.com.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.SmashAttributeTypesController.PutSmashAttributeType(System.Int32,KuroganeHammer.Data.Core.Models.SmashAttributeType)">
            <summary>
            Update an existing <see cref="T:KuroganeHammer.Data.Core.Models.SmashAttributeType"/>.
            </summary>
            <param name="id"></param>
            <param name="smashAttributeType"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.SmashAttributeTypesController.PostSmashAttributeType(KuroganeHammer.Data.Core.Models.SmashAttributeType)">
            <summary>
            Create a new <see cref="T:KuroganeHammer.Data.Core.Models.SmashAttributeType"/>.
            </summary>
            <param name="smashAttributeType"></param>
            <returns></returns>
        </member>
        <member name="M:KuroganeHammer.Data.Api.Controllers.SmashAttributeTypesController.DeleteSmashAttributeType(System.Int32)">
            <summary>
            Delete an existing <see cref="T:KuroganeHammer.Data.Core.Models.SmashAttributeType"/>.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:KuroganeHammer.Data.Api.DTOs.CharacterAttributeRowDto">
            <summary>
            Contains the concept of a 'row' of <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/> data.
            
            This is because each <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/> consists of a single attribute value
            rather than a row of attribute value that KH currently creates his attribute pages from.
            
            The way <see cref="T:KuroganeHammer.Data.Core.Models.CharacterAttribute"/>'s are stored in the DB means if the individual values brought back need
             to change in the future it's fairly straightforward to do so on the back and the frontend won't 
            need to change as much (if at all).
            
            </summary>
        </member>
    </members>
</doc>
